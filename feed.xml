<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en">
<title type="text">Srijan R. Shetty</title>
<generator uri="https://github.com/jekyll/jekyll">Jekyll</generator>
<link rel="self" type="application/atom+xml" href="//srijanshetty.in/feed.xml" />
<link rel="alternate" type="text/html" href="//srijanshetty.in" />
<updated>2018-08-12T21:04:24+05:30</updated>
<id>//srijanshetty.in/</id>
<author>
  <name>Srijan R. Shetty</name>
  <uri>//srijanshetty.in/</uri>
  <email>srijan.shetty+code@gmail.com</email>
</author>


  

<entry>
  <title type="html"><![CDATA[Travelogue - Russia, 2018]]></title>
  <link rel="alternate" type="text/html" href="//srijanshetty.in/travelogue/travelogue-russia-2018/" />
  <id>//srijanshetty.in/travelogue/travelogue-russia-2018</id>
  <published>2018-08-12T20:39:01+05:30</published>
  <updated>2018-08-12T20:39:01+05:30</updated>
  <author>
    <name>Srijan R. Shetty</name>
    <uri>//srijanshetty.in</uri>
    <email>srijan.shetty+code@gmail.com</email>
  </author>
  <content type="html">
    &lt;p&gt;Goodbyes are hard, and seldom perfect, especially when humdrum lives that lay ahead sink in. Standing at the prow of the cruise basking in the millions lights of Moscow, I felt debilitated by reality - these ten days were whimsical, yet I felt it slipping away and the harder I tried to capture it, the faster it slipped. In our foolhardy attempts to capture the moment, we’ve forgotten how to live them. Not everything needs the testimony of a photograph, not every memory needs to be validation of your fraternity. Some moments are inexorably lived then and there and left to the agency of the human mind. And so I let myself go, emboldened by the wine, I let the warmth of my friends sink in to the bittersweet symphony of endings.&lt;/p&gt;

    &lt;p&gt;&lt;a href=&quot;//srijanshetty.in/travelogue/travelogue-russia-2018/&quot;&gt;Travelogue - Russia, 2018&lt;/a&gt; was originally published by Srijan R. Shetty at &lt;a href=&quot;//srijanshetty.in&quot;&gt;Srijan R. Shetty&lt;/a&gt; on August 12, 2018.&lt;/p&gt;
  </content>
</entry>


  

<entry>
  <title type="html"><![CDATA[Call (Me) by (Your) Name: Python Is Pass by What Again?]]></title>
  <link rel="alternate" type="text/html" href="//srijanshetty.in/technical/call-me-by-your-name-python-is-pass-by-what-again/" />
  <id>//srijanshetty.in/technical/call-me-by-your-name-python-is-pass-by-what-again</id>
  <updated>2018-06-05 10:14:37 +0530T00:00:00-00:00</updated>
  <published>2018-06-05T10:14:37+05:30</published>
  
  <author>
    <name>Srijan R. Shetty</name>
    <uri>//srijanshetty.in</uri>
    <email>srijan.shetty+code@gmail.com</email>
  </author>
  <content type="html">
    &lt;p&gt;Full disclosure, I haven’t read the book or watched the film, but the name (pun intended)
gets across the point I want to make about python &lt;strong&gt;names&lt;/strong&gt;. (Note how I use the term &lt;strong&gt;names&lt;/strong&gt;
and not &lt;strong&gt;variables&lt;/strong&gt; or &lt;strong&gt;references&lt;/strong&gt;, which will strike a chord in a few minutes).&lt;br /&gt;&lt;br /&gt;
On the C side of things, you have &lt;em&gt;call-by-value&lt;/em&gt;, and on the Java/ECMAScript side of the world,
you have &lt;em&gt;call-by-reference&lt;/em&gt;. But python, is sly, and while on the surface you’ll think python is
&lt;em&gt;call-by-reference&lt;/em&gt;, it’s a different barnacled monstrosity. Python is what you might call,
&lt;em&gt;&lt;a href=&quot;https://jeffknupp.com/blog/2012/11/13/is-python-callbyvalue-or-callbyreference-neither/&quot;&gt;call-by-name&lt;/a&gt;&lt;/em&gt;.&lt;br /&gt;&lt;br /&gt;
Here’s an innocuous piece of code, which for some inexplicable reason doesn’t produce the expected
output:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;mutate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ls&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;ls&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;ls&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;arr&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;mutate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;arr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;arr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Despite the code being synthetic, it underscores an important point. In this particular example,
the output on the console is &lt;strong&gt;[1,2]&lt;/strong&gt; and not &lt;strong&gt;[1]&lt;/strong&gt;. How on earth is that possible, you ask?
Well, the answer to this mystery lies in the fact that python is &lt;em&gt;call-by-name.&lt;/em&gt;&lt;br /&gt;&lt;br /&gt;
In the &lt;em&gt;call-by-name&lt;/em&gt; model, a name (or a variable in common parlance) is bound to an object. In the &lt;em&gt;main&lt;/em&gt;,
&lt;strong&gt;arr&lt;/strong&gt; is bound to the object &lt;strong&gt;[1,2]&lt;/strong&gt;. Initially in mutate, &lt;strong&gt;ls&lt;/strong&gt; is bound to the same object &lt;strong&gt;[1,2]&lt;/strong&gt;
- note, how we say bound to an object and not a reference to a memory location, unlike C/Java/ECMAscript
- but, on the very first line of &lt;em&gt;mutate&lt;/em&gt;, we bind ls to a new object &lt;strong&gt;[]&lt;/strong&gt;, and hence forth the binding
of &lt;strong&gt;[1,2]&lt;/strong&gt; is hidden from &lt;em&gt;mutate&lt;/em&gt;. Any changes to &lt;strong&gt;ls&lt;/strong&gt; will not be reflected back to &lt;strong&gt;arr&lt;/strong&gt; as they are bound
to different objects.&lt;br /&gt;&lt;br /&gt;
While this might seem pedantic, and left to language purists. This erudite fact can manifest in hard to
find bugs. For example, the following code has a surprising output:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;mutate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ls&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ls&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;ls&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;ls&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;ls&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;arr&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;mutate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;arr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;arr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;mutate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;arr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;arr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The output of this code is as follows:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;python test.py
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;1, 2, 3, 4, 2, 6&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;1, 2, 3, 4, 2, 6&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The second conditional becomes a no-op as &lt;strong&gt;arr&lt;/strong&gt; won’t be mutated once it’s length is greater than 5. Ipso facto,
&lt;em&gt;call-by-name&lt;/em&gt; is evident right now, but in longer methods its to discern and impossible to debug.&lt;br /&gt;&lt;br /&gt;
So, next time recall that python does call (me) by (your) name.&lt;/p&gt;


    &lt;p&gt;&lt;a href=&quot;//srijanshetty.in/technical/call-me-by-your-name-python-is-pass-by-what-again/&quot;&gt;Call (Me) by (Your) Name: Python Is Pass by What Again?&lt;/a&gt; was originally published by Srijan R. Shetty at &lt;a href=&quot;//srijanshetty.in&quot;&gt;Srijan R. Shetty&lt;/a&gt; on June 05, 2018.&lt;/p&gt;
  </content>
</entry>


  

<entry>
  <title type="html"><![CDATA[Honey, I Did a Bare Except]]></title>
  <link rel="alternate" type="text/html" href="//srijanshetty.in/technical/honey-i-did-a-bare-except/" />
  <id>//srijanshetty.in/technical/honey-i-did-a-bare-except</id>
  <updated>2018-05-25 11:10:19 +0530T00:00:00-00:00</updated>
  <published>2018-05-25T11:10:19+05:30</published>
  
  <author>
    <name>Srijan R. Shetty</name>
    <uri>//srijanshetty.in</uri>
    <email>srijan.shetty+code@gmail.com</email>
  </author>
  <content type="html">
    &lt;p&gt;So, what you might ask? In fact you might have seen this blasphemy time and time again:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;k&quot;&gt;try&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;# Some code&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;except&lt;/span&gt; &lt;span class=&quot;ne&quot;&gt;Exception&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Or this variation written by another apostate (me, a few days ago):&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;k&quot;&gt;try&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;# Some code&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;except&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;While we may be blinded in the present, at some point your future-self will want to travel back in time
and smack you for your idiocy, like I wanted to, for this mea cupla.&lt;br /&gt;&lt;br /&gt;
The fundamental issue with &lt;strong&gt;bare excepts&lt;/strong&gt; as they’re called in &lt;em&gt;idiomatic python&lt;/em&gt; is, - as mentioned earlier -
these gremlins come back and bite you. &lt;br /&gt;&lt;br /&gt;
While trying to automate file uploads from my laptop to a cloud storage, I had a rogue IO function which
once, stalled indefinitely. Since I was uploading multiple files in sequence, this would halt the entire
program; (yes, I could use threads but that discussion is best left for another day).
Since this was all wrapped up in a busy loop which watched for changes, I was okay with one off failures.
In an attempt to tame the function I decided to use &lt;em&gt;SIGALRM&lt;/em&gt; and this is when my foolishness dawned upon
me.&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;signal&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;time&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ProcessTimeoutException&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ne&quot;&gt;Exception&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;pass&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;timeout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;raise&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ProcessTimeoutException&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;db_call&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;try&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sleep&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;except&lt;/span&gt; &lt;span class=&quot;ne&quot;&gt;Exception&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;I&amp;#39;m going to eat the error&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;signal&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;signal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;signal&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SIGALRM&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;lambda&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;timeout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;signal&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;alarm&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;try&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;db_call&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;except&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ProcessTimeoutException&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;Never reaches&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;__name__&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;__main__&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Can you notice what’s wrong with the above snippet? &lt;strong&gt;db_call&lt;/strong&gt; ends up eating &lt;em&gt;all&lt;/em&gt; exceptions, which renders
my timeout logic ineffective.&lt;br /&gt;&lt;br /&gt;
The solution, you ask? Well, there’s little that we can do without using &lt;em&gt;threads&lt;/em&gt; or a &lt;em&gt;monitor process&lt;/em&gt; which
kills this script when it notices there’s no progress (the monitor in turn ascertain progress using the OS
or IPC flags).&lt;br /&gt;&lt;br /&gt;
So, as a favour to your future self, kindly avoid going bare (with exceptions).&lt;/p&gt;

    &lt;p&gt;&lt;a href=&quot;//srijanshetty.in/technical/honey-i-did-a-bare-except/&quot;&gt;Honey, I Did a Bare Except&lt;/a&gt; was originally published by Srijan R. Shetty at &lt;a href=&quot;//srijanshetty.in&quot;&gt;Srijan R. Shetty&lt;/a&gt; on May 25, 2018.&lt;/p&gt;
  </content>
</entry>


  

<entry>
  <title type="html"><![CDATA[Zombieland: Zombie Children Eating Memory]]></title>
  <link rel="alternate" type="text/html" href="//srijanshetty.in/technical/zombie-children-eating-memory/" />
  <id>//srijanshetty.in/technical/zombie-children-eating-memory</id>
  <updated>2018-05-16 00:24:38 +0530T00:00:00-00:00</updated>
  <published>2018-05-15T10:58:38+05:30</published>
  
  <author>
    <name>Srijan R. Shetty</name>
    <uri>//srijanshetty.in</uri>
    <email>srijan.shetty+code@gmail.com</email>
  </author>
  <content type="html">
    &lt;p&gt;Children have issues, especially when you try to kill them incorrectly and they come back as
zombies - just in case, I’m talking about process children in linux (don’t arrest me please).&lt;br /&gt;&lt;br /&gt;
Here’s a snippet of code from a personal project:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;k&quot;&gt;try&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;kill&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;child_pid&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;signal&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SIGTERM&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;except&lt;/span&gt; &lt;span class=&quot;ne&quot;&gt;Exception&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Can you notice what’s wrong with the above snippet? (Apart from the horrid error handling,
and the fact that I’ve ignored that the children must have async-signal-safe signal handlers
present.)&lt;br /&gt;&lt;br /&gt;
You’ll be leaving zombies all over the OS!&lt;br /&gt;&lt;br /&gt;
It took me a while to figure out the (mostly) correct way to handle killing your own (process’)
children safely:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;kill&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pid&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;signal&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SIGTERM&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;try&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;psutil&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Process&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pid&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;terminate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;wait&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;timeout&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;45&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;msg&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;Wow. your children are really obedient&amp;quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;except&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;psutil&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;TimeoutExpired&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;# For a bad process this will ensure that we send it a sigkill&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;send_signal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;signal&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SIGKILL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;try&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;wait&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;timeout&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;msg&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;Close call, we need the big guns, but at least they&amp;#39;re dead now&amp;quot;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;except&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;psutil&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;TimeoutExpired&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;msg&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;Zombies have escaped. I repeat, zombies have escaped&amp;quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Let me explain what’s going on here. The first &lt;em&gt;terminate&lt;/em&gt; sends a &lt;strong&gt;SIGTERM&lt;/strong&gt; to the child and then we
do a blocking 45 seconds wait on the child process in order to reap it. If all goes according to plan,
we would have successfully killed the process. But if the powers that be conspire, we might have to bring out
the big guns with &lt;strong&gt;SIGKILL&lt;/strong&gt;.&lt;br /&gt;&lt;br /&gt;
The second &lt;strong&gt;SIGKILL&lt;/strong&gt; is where things get interesting, all process accept &lt;strong&gt;SIGKILL&lt;/strong&gt; and shold terminate
in an ideal worldbut they still might remain as zombies - those beautiful adolescent teen years.
The second wait with a shorter interval tries reaps such processes. (You could ideally keep the timeout at 0,
which will convert it to a non blocking call.)&lt;br /&gt;&lt;br /&gt;
At this point if the zombies don’t die, your only option is to wait for the apocalypse. Or you could
nuke the parent and hope the zombies don’t become orphan zombies. (Yikes)&lt;/p&gt;

    &lt;p&gt;&lt;a href=&quot;//srijanshetty.in/technical/zombie-children-eating-memory/&quot;&gt;Zombieland: Zombie Children Eating Memory&lt;/a&gt; was originally published by Srijan R. Shetty at &lt;a href=&quot;//srijanshetty.in&quot;&gt;Srijan R. Shetty&lt;/a&gt; on May 15, 2018.&lt;/p&gt;
  </content>
</entry>


  

<entry>
  <title type="html"><![CDATA[Afflatus Begins]]></title>
  <link rel="alternate" type="text/html" href="//srijanshetty.in/prose/afflatus-begins/" />
  <id>//srijanshetty.in/prose/afflatus-begins</id>
  <updated>2018-05-07 10:58:38 +0530T00:00:00-00:00</updated>
  <published>2018-05-07T10:58:38+05:30</published>
  
  <author>
    <name>Srijan R. Shetty</name>
    <uri>//srijanshetty.in</uri>
    <email>srijan.shetty+code@gmail.com</email>
  </author>
  <content type="html">
    &lt;p&gt;I would be lying to you if I told you that this is the first time I’ve tried to pen down this particular post. The idea of this blog post has existed for quite some time; but each half baked attempt has ended up in the bottomless pit of my unpublished ramblings.&lt;/p&gt;

&lt;p&gt;Alas, life is transitory and I’ve decided that I no longer will seek absolution in my words. That hope is forlorn.&lt;/p&gt;

&lt;p&gt;The modus operandi of this blog will be simple. At times, I intend to present coherent arguments for both sides of a debate; but mostly, it’ll be excerpts and ramblings from a mind addled by a quarter life crisis. Or it’ll be a technical post, to keep all things balanced.&lt;/p&gt;

&lt;p&gt;So, let’s hope that the afflatus stays for long. If not, the depression of social media would be my only recourse.&lt;/p&gt;


    &lt;p&gt;&lt;a href=&quot;//srijanshetty.in/prose/afflatus-begins/&quot;&gt;Afflatus Begins&lt;/a&gt; was originally published by Srijan R. Shetty at &lt;a href=&quot;//srijanshetty.in&quot;&gt;Srijan R. Shetty&lt;/a&gt; on May 07, 2018.&lt;/p&gt;
  </content>
</entry>


  

<entry>
  <title type="html"><![CDATA[Installing Scikit and Numpy in Ubuntu]]></title>
  <link rel="alternate" type="text/html" href="//srijanshetty.in/technical/installing-scikit-and-numpy-in-ubuntu/" />
  <id>//srijanshetty.in/technical/installing-scikit-and-numpy-in-ubuntu</id>
  <published>2016-02-14T21:15:35+05:30</published>
  <updated>2016-02-14T21:15:35+05:30</updated>
  <author>
    <name>Srijan R. Shetty</name>
    <uri>//srijanshetty.in</uri>
    <email>srijan.shetty+code@gmail.com</email>
  </author>
  <content type="html">
    &lt;p&gt;After sifting through multiple stack-overflow answers and blog posts, here is a list of consolidated steps to install scipy stack on Ubuntu 14.04. (I’m currently using Elementary OS Freya which is a derivative of Ubuntu 14.04).&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;sudo apt-get install python-pip python-setuptools python-dev
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;sudo apt-get install libjpeg-dev zlib1g-dev &lt;span class=&quot;c&quot;&gt;# Pillow build dependencies&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;sudo apt-get install libblas-dev libatlas-dev liblapack-dev gfortran &lt;span class=&quot;c&quot;&gt;# Scipy dependencies&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;sudo apt-get install g++ &lt;span class=&quot;c&quot;&gt;# Sciki-lean dependency&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;sudo apt-get install cython &lt;span class=&quot;c&quot;&gt;# Scikit-image dependency&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;sudo apt-get install libenchant-dev &lt;span class=&quot;c&quot;&gt;# PyEnchant dependency&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;pip install scipy numpy &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;use pyenv, not sudo&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


    &lt;p&gt;&lt;a href=&quot;//srijanshetty.in/technical/installing-scikit-and-numpy-in-ubuntu/&quot;&gt;Installing Scikit and Numpy in Ubuntu&lt;/a&gt; was originally published by Srijan R. Shetty at &lt;a href=&quot;//srijanshetty.in&quot;&gt;Srijan R. Shetty&lt;/a&gt; on February 14, 2016.&lt;/p&gt;
  </content>
</entry>


  

<entry>
  <title type="html"><![CDATA[Tasker Appendix]]></title>
  <link rel="alternate" type="text/html" href="//srijanshetty.in/tasker/tasker/" />
  <id>//srijanshetty.in/tasker/tasker</id>
  <updated>2016-01-31 23:42:34 +0530T00:00:00-00:00</updated>
  <published>2016-01-31T23:42:34+05:30</published>
  
  <author>
    <name>Srijan R. Shetty</name>
    <uri>//srijanshetty.in</uri>
    <email>srijan.shetty+code@gmail.com</email>
  </author>
  <content type="html">
    &lt;p&gt;I’ve been spending a lot of time trying to automate some of the more annoying mundane tasks on my phone using Tasker and the Auto Apps suite of late which has led to the cumulation of a body of knowledge which is relatively hard to find; and in an attempt to give back to society &lt;em&gt;coughs&lt;/em&gt;, here are some handy tricks. (posts coming soon)&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Running AutoInput when the screen is off.&lt;/li&gt;
  &lt;li&gt;Daily backups using Titanium Backup free version. (buy the full version and support the developer).&lt;/li&gt;
  &lt;li&gt;Getting Google Play to speak out the artist name when the headset is plugged in.&lt;/li&gt;
  &lt;li&gt;On Boot Accessibility Jobs.&lt;/li&gt;
  &lt;li&gt;SMS activated lock screen.&lt;/li&gt;
  &lt;li&gt;Playing YouTube videos in background.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Until the next post.&lt;/p&gt;


    &lt;p&gt;&lt;a href=&quot;//srijanshetty.in/tasker/tasker/&quot;&gt;Tasker Appendix&lt;/a&gt; was originally published by Srijan R. Shetty at &lt;a href=&quot;//srijanshetty.in&quot;&gt;Srijan R. Shetty&lt;/a&gt; on January 31, 2016.&lt;/p&gt;
  </content>
</entry>


  

<entry>
  <title type="html"><![CDATA[Travelogue - Paris]]></title>
  <link rel="alternate" type="text/html" href="//srijanshetty.in/travelogue/travelogue-paris/" />
  <id>//srijanshetty.in/travelogue/travelogue-paris</id>
  <published>2015-11-28T13:50:03+05:30</published>
  <updated>2015-11-28T13:50:03+05:30</updated>
  <author>
    <name>Srijan R. Shetty</name>
    <uri>//srijanshetty.in</uri>
    <email>srijan.shetty+code@gmail.com</email>
  </author>
  <content type="html">
    &lt;p&gt;Alas there were more than two,&lt;br /&gt;
A beautiful maid - male a few.&lt;br /&gt;
Willing caught in this deja - vu,&lt;br /&gt;
the young lad; his story anew,&lt;br /&gt;
still at odds in the battle of two.&lt;br /&gt;
Lest he was cursed, it had to be;&lt;br /&gt;
The one scarred - couldn’t see.&lt;br /&gt;
It stirred, the dove was set free;&lt;br /&gt;
stoic his aide, oblivion enemy,&lt;br /&gt;
the vanguard so took his stride,&lt;br /&gt;
a sullen brow, a callous hide,&lt;br /&gt;
a tale to tell, a pen to confide.&lt;br /&gt;&lt;/p&gt;


    &lt;p&gt;&lt;a href=&quot;//srijanshetty.in/travelogue/travelogue-paris/&quot;&gt;Travelogue - Paris&lt;/a&gt; was originally published by Srijan R. Shetty at &lt;a href=&quot;//srijanshetty.in&quot;&gt;Srijan R. Shetty&lt;/a&gt; on November 28, 2015.&lt;/p&gt;
  </content>
</entry>


  

<entry>
  <title type="html"><![CDATA[Wastelands]]></title>
  <link rel="alternate" type="text/html" href="//srijanshetty.in/poems/wastelands/" />
  <id>//srijanshetty.in/poems/wastelands</id>
  <published>2015-10-10T18:43:32+05:30</published>
  <updated>2015-10-10T18:43:32+05:30</updated>
  <author>
    <name>Srijan R. Shetty</name>
    <uri>//srijanshetty.in</uri>
    <email>srijan.shetty+code@gmail.com</email>
  </author>
  <content type="html">
    &lt;p&gt;He trudged in the wastelands,&lt;br /&gt;
The ruins of the great sands,&lt;br /&gt;
Of hopes; unrelenting desire,&lt;br /&gt;
Of passion; an everlasting fire,&lt;br /&gt;
Now withered and forlorn,&lt;br /&gt;
Forgotten, scathed and torn.&lt;br /&gt;
Lost cause and no ambition,&lt;br /&gt;
Dead men seeking salvation.&lt;br /&gt;&lt;/p&gt;


    &lt;p&gt;&lt;a href=&quot;//srijanshetty.in/poems/wastelands/&quot;&gt;Wastelands&lt;/a&gt; was originally published by Srijan R. Shetty at &lt;a href=&quot;//srijanshetty.in&quot;&gt;Srijan R. Shetty&lt;/a&gt; on October 10, 2015.&lt;/p&gt;
  </content>
</entry>


  

<entry>
  <title type="html"><![CDATA[CLI Goodies]]></title>
  <link rel="alternate" type="text/html" href="//srijanshetty.in/technical/cli-goodies/" />
  <id>//srijanshetty.in/technical/cli-goodies</id>
  <published>2015-09-27T17:43:02+05:30</published>
  <updated>2015-09-27T17:43:02+05:30</updated>
  <author>
    <name>Srijan R. Shetty</name>
    <uri>//srijanshetty.in</uri>
    <email>srijan.shetty+code@gmail.com</email>
  </author>
  <content type="html">
    &lt;blockquote&gt;
  &lt;p&gt;Today, I finally have most of the goodness of my shell packed as a single repository. I say most because, I still have some things stuck in antigen with no clear migration path. Until then give these goodies a whirl, and do give a shout out to me if you need any help setting them up; I’ve added instructions of getting them up and ready with the common - a metric defined by the number of GitHub stars the framework has - frameworks out there. (My favourite is undoubtedly &lt;code&gt;Prezto&lt;/code&gt; for it’s super fast startup).&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;installation&quot;&gt;Installation&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Installing under &lt;a href=&quot;https://github.com/sorin-ionescu/prezto&quot;&gt;Prezto&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; .zprezto
  git submodule add https://github.com/srijanshetty/cli-goodies.git modules/cli-goodies&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Add &lt;code&gt;cli-goodies&lt;/code&gt; to your &lt;code&gt;.zpreztorc&lt;/code&gt; file:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;# Set the Prezto modules to load (browse modules).
  # The order matters.
  zstyle &amp;#39;:prezto:load&amp;#39; pmodule \
    &amp;#39;environment&amp;#39; \
    &amp;#39;terminal&amp;#39; \
    &amp;#39;editor&amp;#39; \
    &amp;#39;history&amp;#39; \
    &amp;#39;directory&amp;#39; \
    &amp;#39;spectrum&amp;#39; \
    &amp;#39;utility&amp;#39; \
    &amp;#39;completion&amp;#39; \
    &amp;#39;prompt&amp;#39; \
    &amp;#39;cli-goodies&amp;#39;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Installing under oh-my-zsh&lt;/strong&gt;&lt;br /&gt;
I haven’t tried using &lt;code&gt;cli-goodies&lt;/code&gt; with &lt;code&gt;oh-my-zsh&lt;/code&gt; and I think the following should work in theory.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;wget https://raw.github.com/srijanshetty/cli-goodies/master/init.zsh -O &lt;span class=&quot;nv&quot;&gt;$HOME&lt;/span&gt;/.oh-my-zsh/custom/cli-goodies.zsh&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Installing using &lt;a href=&quot;https://github.com/zsh-users/antigen&quot;&gt;Antigen&lt;/a&gt;&lt;/strong&gt;&lt;br /&gt;
If you use &lt;a href=&quot;https://github.com/zsh-users/antigen&quot;&gt;Antigen&lt;/a&gt;, adding the following line to &lt;code&gt;.zshrc&lt;/code&gt; should load &lt;code&gt;cli-goodies&lt;/code&gt;.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;antigen-bundle srijanshetty/zsh-dwim&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Using &lt;code&gt;cli-goodies&lt;/code&gt; anywhere else&lt;/strong&gt;&lt;br /&gt;
Anyone running &lt;code&gt;zsh&lt;/code&gt; should only need to add the following line to their &lt;code&gt;.zshrc&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nb&quot;&gt;source &lt;/span&gt;init.zsh&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id=&quot;dependencies&quot;&gt;Dependencies&lt;/h2&gt;

&lt;p&gt;You’ll need to install &lt;code&gt;peru&lt;/code&gt; to get the completions working. Peru is a simple file downloader with a declarative syntax. While &lt;code&gt;curl&lt;/code&gt; could be used to accomplish the same, &lt;code&gt;peru&lt;/code&gt; is simpler to read.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;pip install peru
peru sync&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id=&quot;features&quot;&gt;Features&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Completions&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/sampsyo/beets/blob/master/extra/_beet&quot;&gt;_beet&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/s7anley/zsh-geeknote/master/_geeknote&quot;&gt;_geeknote&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/Schnouki/git-annex-zsh-completion/master/_git-annex&quot;&gt;_git-annex&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/gruntjs/grunt-cli/master/completion/zsh&quot;&gt;_grunt&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/srijanshetty/gulp-autocompletion-zsh/master/_gulp&quot;&gt;_gulp&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/srijanshetty/zsh-pip-completion/master/_pip&quot;&gt;_pip&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/srijanshetty/zsh-pandoc-completion/master/_pandoc&quot;&gt;_pandoc&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/rvm/rvm/master/scripts/extras/completion.zsh/_rvm&quot;&gt;_rvm&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/oscardelben/sheet/master/contrib/completion/sheet.zsh&quot;&gt;_sheet&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/github/hub/blob/master/etc/hub.zsh_completion&quot;&gt;_hub&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/srijanshetty/offline/blob/master/_offline&quot;&gt;_offline&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/srijanshetty/sdp/master/_sdp&quot;&gt;_sdp&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;functions/_repos&quot;&gt;_repos&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Scripts/Functions&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/srijanshetty/cron-wallpaper&quot;&gt;cron-wallpaper&lt;/a&gt;: Change wallpapers using cron.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/srijanshetty/dnd&quot;&gt;dnd&lt;/a&gt;: DND mode for Elementary OS.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/srijanshetty/folder2md&quot;&gt;folder2md&lt;/a&gt;: Convert a directory tree to markdown.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/srijanshetty/offline&quot;&gt;offline&lt;/a&gt;: Stores commands when offline and execute later in batch.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;functions/pastebin&quot;&gt;pastebin&lt;/a&gt;: Create a pastie using &lt;a href=&quot;http://sprunge.us&quot;&gt;sprunge.us&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;functions/proxy&quot;&gt;proxy&lt;/a&gt;: Enable/disable proxy settings.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;functions/repos&quot;&gt;repos&lt;/a&gt;: Helper for &lt;a href=&quot;myrepos.branchable.com&quot;&gt;myrepos&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/srijanshetty/sdp&quot;&gt;sdp&lt;/a&gt;: scp for directories.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;functions/showtoiletfonts&quot;&gt;showtoiletfonts&lt;/a&gt;: Show available toilet fonts.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/srijanshetty/stats-cli&quot;&gt;stats-cli&lt;/a&gt;: Compute avg, sd, min, max from a list.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://transfer.sh&quot;&gt;transfer&lt;/a&gt;: Use &lt;a href=&quot;https://transfer.sh&quot;&gt;transfer.sh&lt;/a&gt; to transfer files from the CLI.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I hope that you have fun using these tools as much as I do. PRs are encouraged.&lt;br /&gt;&lt;br /&gt;
Fin.&lt;/p&gt;

    &lt;p&gt;&lt;a href=&quot;//srijanshetty.in/technical/cli-goodies/&quot;&gt;CLI Goodies&lt;/a&gt; was originally published by Srijan R. Shetty at &lt;a href=&quot;//srijanshetty.in&quot;&gt;Srijan R. Shetty&lt;/a&gt; on September 27, 2015.&lt;/p&gt;
  </content>
</entry>


  

<entry>
  <title type="html"><![CDATA[Mastering Custom Site Search in Chrome]]></title>
  <link rel="alternate" type="text/html" href="//srijanshetty.in/hacks/mastering-search-in-chrome/" />
  <id>//srijanshetty.in/hacks/mastering-search-in-chrome</id>
  <published>2015-09-13T19:36:38+05:30</published>
  <updated>2015-09-13T19:36:38+05:30</updated>
  <author>
    <name>Srijan R. Shetty</name>
    <uri>//srijanshetty.in</uri>
    <email>srijan.shetty+code@gmail.com</email>
  </author>
  <content type="html">
    &lt;p&gt;Chrome was the shiny, fast browser which caused me to shift from firefox; and even after chrome has become the still shiny, slow mess that it has become, I find it hard to move away due to some really awesome inbuilt features of chrome. My favourite amongst them is the ability to leverage any site’s search functionality. I’m pretty sure that you might have noticed that pressing &lt;code&gt;[Tab]&lt;/code&gt; after typing youtube in the search bar allows you to search youtube directly from the search bar. What’s really fun is that this functionality can be extended to any website as long as it searched using a URL query.&lt;br /&gt;&lt;br /&gt;
For example, I’ll show you how to automate searching within the settings of chrome.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Firstly navigate to &lt;strong&gt;chrome://settings&lt;/strong&gt; - and yes, I like to type that out.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;In the search section, you’ll see a &lt;strong&gt;Manage Search Engines&lt;/strong&gt; option.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;
&lt;figure&gt;
	&lt;a href=&quot;/images/manage-search-engines.png&quot;&gt;&lt;img src=&quot;/images/manage-search-engines.png&quot; /&gt;&lt;/a&gt;
&lt;/figure&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Scroll to the end of the list of search engines, where it says that you can &lt;code&gt;Add a new search engine&lt;/code&gt;.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;To add a new search engine, you need to name it and additionally give it a &lt;code&gt;trigger&lt;/code&gt;. The trigger
 is the key which followed by a &lt;code&gt;Tab&lt;/code&gt; on the omnibar lets chrome know your intent of searching the site
 instead of merely visiting it. Here I’ve used &lt;code&gt;csettings&lt;/code&gt; as a trigger.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;
&lt;figure&gt;
  &lt;a href=&quot;/images/example-search-engine.png&quot;&gt;&lt;img src=&quot;/images/example-search-engine.png&quot; /&gt;&lt;/a&gt;
&lt;/figure&gt;

&lt;ul&gt;
  &lt;li&gt;Fin.&lt;/li&gt;
&lt;/ul&gt;


    &lt;p&gt;&lt;a href=&quot;//srijanshetty.in/hacks/mastering-search-in-chrome/&quot;&gt;Mastering Custom Site Search in Chrome&lt;/a&gt; was originally published by Srijan R. Shetty at &lt;a href=&quot;//srijanshetty.in&quot;&gt;Srijan R. Shetty&lt;/a&gt; on September 13, 2015.&lt;/p&gt;
  </content>
</entry>


  

<entry>
  <title type="html"><![CDATA[Nothingness]]></title>
  <link rel="alternate" type="text/html" href="//srijanshetty.in/poems/nothingness/" />
  <id>//srijanshetty.in/poems/nothingness</id>
  <published>2015-09-03T23:20:38+05:30</published>
  <updated>2015-09-03T23:20:38+05:30</updated>
  <author>
    <name>Srijan R. Shetty</name>
    <uri>//srijanshetty.in</uri>
    <email>srijan.shetty+code@gmail.com</email>
  </author>
  <content type="html">
    &lt;blockquote&gt;
  &lt;p&gt;An attempt at free verse.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The light at the end of the tunnel,&lt;br /&gt;
Unrequited hope and unending faith -&lt;br /&gt;
All artifacts of our weak minds,&lt;br /&gt;
Desperate cries of pitiful hearts.&lt;br /&gt;&lt;br /&gt;
We crave endings, seek meanings,&lt;br /&gt;
For we don’t want, we can’t bear,&lt;br /&gt;
The dark reality, the sad tragedy,&lt;br /&gt;
Of living without consequence,&lt;br /&gt;
Of dying without resurgence.&lt;br /&gt;&lt;br /&gt;
Hell and heaven were never the artifacts of religion,&lt;br /&gt;
They’ve been our inability to reconcile nothingness.&lt;br /&gt;&lt;/p&gt;


    &lt;p&gt;&lt;a href=&quot;//srijanshetty.in/poems/nothingness/&quot;&gt;Nothingness&lt;/a&gt; was originally published by Srijan R. Shetty at &lt;a href=&quot;//srijanshetty.in&quot;&gt;Srijan R. Shetty&lt;/a&gt; on September 03, 2015.&lt;/p&gt;
  </content>
</entry>


  

<entry>
  <title type="html"><![CDATA[Chromecast and Linux]]></title>
  <link rel="alternate" type="text/html" href="//srijanshetty.in/hacks/chromecast-and-linux/" />
  <id>//srijanshetty.in/hacks/chromecast-and-linux</id>
  <published>2015-08-23T16:15:50+05:30</published>
  <updated>2015-08-23T16:15:50+05:30</updated>
  <author>
    <name>Srijan R. Shetty</name>
    <uri>//srijanshetty.in</uri>
    <email>srijan.shetty+code@gmail.com</email>
  </author>
  <content type="html">
    &lt;blockquote&gt;
  &lt;p&gt;TL;DR The Chromecast chrome extension works even on linux.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;After trying to get &lt;a href=&quot;https://github.com/albfan/miraclecast&quot;&gt;Miraclecast&lt;/a&gt; working with &lt;strong&gt;Elementary OS Freya&lt;/strong&gt;,a couple of times,I finally bit the bullet and bought a Chromecast. In retrospect, I took the decision in impulse and didn’t do the necessary due diligence before making the purchase. I loved the Chromecast from the moment I started playing with it and it worked seemlessly with my Android Phone but imagine the trauma I had to go through when I realized that Chromecast is not officially supported on linux. And while there were many hacks namely using samba server or Plex to get it working with Linux - and I’m always game for a hack - it was a very baffling that Chromecast, which works on Windows doesn’t work on Linux, because both have the same underlying engine - Chrome. So, I decided to give the chrome extension a whirl on Linux and to my pleasant surprise - it worked.&lt;/p&gt;


    &lt;p&gt;&lt;a href=&quot;//srijanshetty.in/hacks/chromecast-and-linux/&quot;&gt;Chromecast and Linux&lt;/a&gt; was originally published by Srijan R. Shetty at &lt;a href=&quot;//srijanshetty.in&quot;&gt;Srijan R. Shetty&lt;/a&gt; on August 23, 2015.&lt;/p&gt;
  </content>
</entry>


  

<entry>
  <title type="html"><![CDATA[Estranged]]></title>
  <link rel="alternate" type="text/html" href="//srijanshetty.in/poems/estranged/" />
  <id>//srijanshetty.in/poems/estranged</id>
  <published>2015-08-20T22:23:15+05:30</published>
  <updated>2015-08-20T22:23:15+05:30</updated>
  <author>
    <name>Srijan R. Shetty</name>
    <uri>//srijanshetty.in</uri>
    <email>srijan.shetty+code@gmail.com</email>
  </author>
  <content type="html">
    &lt;blockquote&gt;
  &lt;p&gt;Two roads diverged in a wood, and estranged they stood.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;For a minute there I wanted time to stop,&lt;br /&gt;
A thousand answers whirred by,&lt;br /&gt;
With no semblance to the question at top.&lt;br /&gt;&lt;br /&gt;
Words felt heavy, and my breath was lost,&lt;br /&gt;
A wandering spirit, a guilt, and a rumour of loss,&lt;br /&gt;
Not reason, it was absolution I sought.&lt;br /&gt;&lt;br /&gt;
We had trudged along, enduring our plight,&lt;br /&gt;
Numbed by our pain, seeking respite,&lt;br /&gt;
Dreaming together, in the search of light.&lt;br /&gt;&lt;br /&gt;
No direction, and this inheritance of loss,&lt;br /&gt;
In our love of shared pain, and lost cause,&lt;br /&gt;
Being alone, with each other, in this chaos.&lt;br /&gt;&lt;br /&gt;
Yes, I’d erred, I had lost her hand,&lt;br /&gt;
Not knowing what that had meant,&lt;br /&gt;
I’m now left with ruins in the sand.&lt;br /&gt;&lt;br /&gt;
These echoes of silence, my hopeless cries,&lt;br /&gt;
Hallow my way - the scars of a past life,&lt;br /&gt;
Guiding my path, amidst these many lies.&lt;br /&gt;&lt;br /&gt;
The minute was gone, the thought was spent,&lt;br /&gt;
And even if I yearned, or asked for more,&lt;br /&gt;
The deed was done, no wise of what it meant.&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;


    &lt;p&gt;&lt;a href=&quot;//srijanshetty.in/poems/estranged/&quot;&gt;Estranged&lt;/a&gt; was originally published by Srijan R. Shetty at &lt;a href=&quot;//srijanshetty.in&quot;&gt;Srijan R. Shetty&lt;/a&gt; on August 20, 2015.&lt;/p&gt;
  </content>
</entry>


  

<entry>
  <title type="html"><![CDATA[Travelogue - Central Park, NY]]></title>
  <link rel="alternate" type="text/html" href="//srijanshetty.in/travelogue/travelogue-central-park-ny/" />
  <id>//srijanshetty.in/travelogue/travelogue-central-park-ny</id>
  <published>2015-08-04T08:16:40+05:30</published>
  <updated>2015-08-04T08:16:40+05:30</updated>
  <author>
    <name>Srijan R. Shetty</name>
    <uri>//srijanshetty.in</uri>
    <email>srijan.shetty+code@gmail.com</email>
  </author>
  <content type="html">
    &lt;p&gt;It’s the search of greener pastures,&lt;br /&gt;
The fear of these barren lands,&lt;br /&gt;
The tireless flow of currents,&lt;br /&gt;
The fear of being left ashore.&lt;br /&gt;&lt;br /&gt;
The pursuit of infinity,&lt;br /&gt;
The fear of being average.&lt;br /&gt;
The search of Neverland,&lt;br /&gt;
Lest you remain anchored.&lt;br /&gt;&lt;br /&gt;
Fuels an eclectic passion,&lt;br /&gt;
A desire to transcend,&lt;br /&gt;
To nourish, to create,&lt;br /&gt;
To leave, and to move.&lt;br /&gt;&lt;/p&gt;

    &lt;p&gt;&lt;a href=&quot;//srijanshetty.in/travelogue/travelogue-central-park-ny/&quot;&gt;Travelogue - Central Park, NY&lt;/a&gt; was originally published by Srijan R. Shetty at &lt;a href=&quot;//srijanshetty.in&quot;&gt;Srijan R. Shetty&lt;/a&gt; on August 04, 2015.&lt;/p&gt;
  </content>
</entry>


  

<entry>
  <title type="html"><![CDATA[Greg Wilson - What We Know About Software]]></title>
  <link rel="alternate" type="text/html" href="//srijanshetty.in/technical/greg-wilson-what-we-know-about-software/" />
  <id>//srijanshetty.in/technical/greg-wilson-what-we-know-about-software</id>
  <published>2015-06-27T22:15:23+05:30</published>
  <updated>2015-06-27T22:15:23+05:30</updated>
  <author>
    <name>Srijan R. Shetty</name>
    <uri>//srijanshetty.in</uri>
    <email>srijan.shetty+code@gmail.com</email>
  </author>
  <content type="html">
    &lt;p&gt;A few key takeaways and fun quotes from the insightful talk by &lt;a href=&quot;http://www.cs.toronto.edu/~gvwilson/&quot;&gt;Greg Wilson&lt;/a&gt; titled “What We Actually Know About Software Development, and Why We Believe It’s True”:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;A programmer should be willing to burn the entire code base down and rebuild if the project
reaches such a stage.&lt;/li&gt;
  &lt;li&gt;Code reviews. Just do them.&lt;/li&gt;
  &lt;li&gt;We know nothing about estimating the completion time of software projects.&lt;/li&gt;
  &lt;li&gt;Conway’s Law: The code structure closely resembles the structure of the organization.&lt;/li&gt;
  &lt;li&gt;As programmers, we can understand only small patches. (It’s because coding is a very complex task.)&lt;/li&gt;
  &lt;li&gt;Engineering is the love-child of Science and Economics.&lt;/li&gt;
  &lt;li&gt;Ask for citations, back everything with data.&lt;/li&gt;
  &lt;li&gt;Increasing the problem complexity non linearly increases the solution complexity.&lt;/li&gt;
  &lt;li&gt;Platform independent code provides platform independent performance.&lt;/li&gt;
  &lt;li&gt;Coders produce the same number of lines of code disregarding the language they code in.
As a consequence, we should be coding in a language higher up in the abstraction pyramid.&lt;/li&gt;
  &lt;li&gt;We as a society have very low standards of proof.&lt;/li&gt;
  &lt;li&gt;Most OOP metrics perform no better than a simple LOC measurement.&lt;/li&gt;
  &lt;li&gt;Most of the time of developing a project lies in requirements and design phase.&lt;/li&gt;
  &lt;li&gt;A possible reason while agile works is that we work on smaller parts of the project and hence
this might lead to reduced time in requirements phase. &lt;em&gt;Research Needed&lt;/em&gt;&lt;/li&gt;
  &lt;li&gt;All progress in science isn’t forward, sometimes science has to take a step back, accept that
it faltered and restart.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;I would urge all of you to watch the talk:&lt;/p&gt;

&lt;iframe src=&quot;https://player.vimeo.com/video/9270320&quot; width=&quot;500&quot; height=&quot;281&quot; frameborder=&quot;0&quot; webkitallowfullscreen=&quot;&quot; mozallowfullscreen=&quot;&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
&lt;p&gt;&lt;a href=&quot;https://vimeo.com/9270320&quot;&gt;Greg Wilson - What We Actually Know About Software Development, and Why We Believe It&amp;#039;s True&lt;/a&gt; from &lt;a href=&quot;https://vimeo.com/cusec&quot;&gt;CUSEC&lt;/a&gt; on &lt;a href=&quot;https://vimeo.com&quot;&gt;Vimeo&lt;/a&gt;.&lt;/p&gt;

    &lt;p&gt;&lt;a href=&quot;//srijanshetty.in/technical/greg-wilson-what-we-know-about-software/&quot;&gt;Greg Wilson - What We Know About Software&lt;/a&gt; was originally published by Srijan R. Shetty at &lt;a href=&quot;//srijanshetty.in&quot;&gt;Srijan R. Shetty&lt;/a&gt; on June 27, 2015.&lt;/p&gt;
  </content>
</entry>


  

<entry>
  <title type="html"><![CDATA[Computer Science and Engineering, IIT Kanpur]]></title>
  <link rel="alternate" type="text/html" href="//srijanshetty.in/write-ups/computer-science-and-engineering-iit-kanpur/" />
  <id>//srijanshetty.in/write-ups/computer-science-and-engineering-iit-kanpur</id>
  <updated>Thu Jun 11 16:01:43 IST 2015T00:00:00-00:00</updated>
  <published>2015-06-11T15:53:22+05:30</published>
  
  <author>
    <name>Srijan R. Shetty</name>
    <uri>//srijanshetty.in</uri>
    <email>srijan.shetty+code@gmail.com</email>
  </author>
  <content type="html">
    &lt;p&gt;First of all, I would like to congratulate you and your family for this outstanding feat of clearing JEE ‘15.&lt;br /&gt;&lt;br /&gt; Introductions are in order, I am Srijan R Shetty, an alum - it’ll take considerable time to digest that fact - of the Department of Computer Science and Engineering at IIT Kanpur.&lt;br /&gt;&lt;br /&gt;
Before you embark upon the tedious journey of reading through this entire post, I would urge you to go through Professor Dheeraj Sanghi’s blog “A Guide to JEE Counselling”. Additionally, he’s active on Quora; and most certainly will answer pertinent questions. &lt;br /&gt;&lt;br /&gt;
There are some excellent posts written by my peers at IITK out in the wild and as my computer science education has taught me not to reinvent the wheel, I shall compile the best bits from their articles.&lt;br /&gt;&lt;br /&gt;
Why IITK? &lt;a href=&quot;https://www.quora.com/Shashwat-Chandra&quot;&gt;Shashwat Chandra&lt;/a&gt; does an excellent job of answering this question:&lt;br /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Why IIT Kanpur? The cultural festival of IIT Kanpur, Antaragni, is run virtually entirely by students. The Students’ Gymkhana is a body made of students of all batches. The New SAC (Students’ Activity Centre, a place for people to hang out) was majorly planned by the students of three batches, and the franchises selected for its food court were selected by a panel of students. The degree of freedom given to students at IIT Kanpur is, in my opinion, definitely larger than most other institutes. IIT Kanpur also has the distinct advantage of being in a city that is much lesser developed than places like Mumbai and Delhi. Why is this an advantage? IIT Kanpur has become self-contained, because there is a larger incentive to make everything available on campus. The choices of extra-curricular activities are larger, the food options are cheap and more varied, and all sections of the campus are together, making it a tighter, closer-knit location. Each club has its own advantages. Some clubs improve your speaking skill; others teach you a new art; even others let you hone your intellect in the direction you want. Art, music, literature, dance, electronics, robotics, photography, whatever your interest, there is going to be an outlet. If there isn’t, it is not hard to create an outlet or a club for an interest you feel will benefit you. There are certain to be more people interested in the things you like.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;IITK’s academic curriculum was revised in 2011 and the new curriculum was one of the primary reasons why I joined IITK. The curriculum contains two parts: a departmental core and a compulsory core.&lt;br /&gt;&lt;br /&gt;
In the very first year, all courses are department neutral. You will get to learn Mechanics and Electromagnetic Theory in Physics, Organic, Inorganic and Physical Chemistry in Chemistry, Basic Life Sciences (yes Biology!), Engineering Graphics, Linear Algebra and Calculus in Mathematics and (the dreaded) morning exercises. Having the first year being departmental neutral works out for students who change their branches. (A side note on branch changes, don’t bank on them. Albeit I managed to change my branch from Civil to Computer Science, they are a tricky slope to ascend.) To break the monotony and gain a broader outlook, you will be doing at least five Humanities and Social Sciences Courses in your stay at IITK. (I’ve done courses in Philosophy, Psychology, Art, Human Rights and will be doing one in Economics next fall. While people may disagree, I’ve found these courses liberating - pun intended.)&lt;br /&gt;&lt;br /&gt;
The CSE course curriculum looks as follows: &lt;a href=&quot;http://www.iitk.ac.in/doaa/DOAA/arc2012templete.pdf&quot;&gt;CSE Course Template&lt;/a&gt;, you can cross reference the course numbers from &lt;a href=&quot;http://cse.iitk.ac.in/pages/Courses.html&quot;&gt;Department of Computer Science and Engineering&lt;/a&gt;.&lt;br /&gt;&lt;br /&gt;
&lt;a href=&quot;https://www.quora.com/Priyank-Jaini&quot;&gt;Priyank Jaini&lt;/a&gt; gave a very good overview of how your curriculum will work: (I did make a few changes so that the data matches with that of CSE)&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;While pursuing CSE at IITK, you will have the option of taking 6 Open Electives(OE), 4 Engineering Science Options(ESO), 4 Departmental Electives(DE), UGP-I(Undergraduate Project)(optional) and UGP-II &amp;amp; III (Undergraduate Project II which can be substituted with another DE or OE) and UGP-IV(this is to earn extra credits), 5 HSS courses(2 from level-I HSS and 3 from Level-II HSS bracket).&lt;br /&gt;&lt;br /&gt;
Open Electives as the name suggests are courses you can opt from any department including your own. These are the courses which render flexibility to your programme. But choosing these courses from a discipline which interests you, you can even go for a Minor in that discipline provided you fulfil the criteria set. For example you are interested in Computer Science, you can take OE’s accordingly that make you eligible to obtain a Minor in CSE after 4years with a Major in Maths(Note: From the current status, CSE Dept. of IIT-Kanpur has offered no Minors and hence the example is a purely hypothetical one.&lt;br /&gt;&lt;br /&gt;
Science Options are courses in other Science discipline like Physics and Chemistry. You will have to choose a total of 2 such courses. Departmental Electives are courses you can choose from your own Department template subject to what courses are offered in the semester.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The flexibility of IITK’s new academic programme was what made it an obvious choice for me. You can take up minors in departments which interest you, or take up a secondary major in an another department altogether, you are also given the option for dual degrees. Also with a new branch change policy in place, I believe that it will be easier for students to get a branch change.
(The new academic curriculum is finally stabilizing and only a few minors kinks need to be ironed out).&lt;br /&gt;&lt;br /&gt;
Finally I would like to say: IITK has shaped the person that I’ve become today. In IITK, I developed a new found vigour towards learning in general, which is veritably unlike the rote learning I did in school. I believe this is partly because of professors who spend hours preparing for our next lectures and partly because of the students over here who never fail to me amaze me with what they are capable of (both in life and academics). I’ve been showered with opportunities and I’ve met people who I’ll cherish for a lifetime.&lt;br /&gt;&lt;br /&gt;
Feel free to ask any questions, you could drop a mail at &lt;a href=&quot;&amp;#109;&amp;#097;&amp;#105;&amp;#108;&amp;#116;&amp;#111;:&amp;#115;&amp;#114;&amp;#105;&amp;#106;&amp;#097;&amp;#110;&amp;#115;&amp;#064;&amp;#105;&amp;#105;&amp;#116;&amp;#107;&amp;#046;&amp;#097;&amp;#099;&amp;#046;&amp;#105;&amp;#110;&quot;&gt;&amp;#115;&amp;#114;&amp;#105;&amp;#106;&amp;#097;&amp;#110;&amp;#115;&amp;#064;&amp;#105;&amp;#105;&amp;#116;&amp;#107;&amp;#046;&amp;#097;&amp;#099;&amp;#046;&amp;#105;&amp;#110;&lt;/a&gt; or you could ping me on facebook, &lt;a href=&quot;https://www.facebook.com/srijanrshetty&quot;&gt;Srijan R Shetty | Facebook&lt;/a&gt;.&lt;br /&gt;&lt;br /&gt;
Hope this will be of some use.&lt;br /&gt;
Live long and prosper&lt;br /&gt;
Shetty.&lt;/p&gt;

    &lt;p&gt;&lt;a href=&quot;//srijanshetty.in/write-ups/computer-science-and-engineering-iit-kanpur/&quot;&gt;Computer Science and Engineering, IIT Kanpur&lt;/a&gt; was originally published by Srijan R. Shetty at &lt;a href=&quot;//srijanshetty.in&quot;&gt;Srijan R. Shetty&lt;/a&gt; on June 11, 2015.&lt;/p&gt;
  </content>
</entry>


  

<entry>
  <title type="html"><![CDATA[Time Travelling With Vim]]></title>
  <link rel="alternate" type="text/html" href="//srijanshetty.in/technical/time-travelling-with-vim/" />
  <id>//srijanshetty.in/technical/time-travelling-with-vim</id>
  <published>2015-05-30T12:06:18+05:30</published>
  <updated>2015-05-30T12:06:18+05:30</updated>
  <author>
    <name>Srijan R. Shetty</name>
    <uri>//srijanshetty.in</uri>
    <email>srijan.shetty+code@gmail.com</email>
  </author>
  <content type="html">
    &lt;p&gt;I usually work on many projects at a time and as a consequence, I tend to open many files. Having all
of my data backed in a VCS saves me the hassle of losing any committed data, but it’s always possible to
shoot yourself in the foot by messing up the work tree; and this is where the editor of my choice -
the mighty and glorious - vim comes to the rescue. A little know fact - vim is a superhero - and
one of vim’s superpowers is time travel - and not just any time travel - time travel on steroids.&lt;br /&gt;&lt;br /&gt;
Other folks may call it persistent undo, but there’s no fooling us! But being the humble superhero that vim
is, you need to tell vim to use time travel.&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;First create an undodir for vim.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;mkdir -p ~/.vim/undodir&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Next you need to enable persistent undo by including the following lines in your vimrc:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nb&quot;&gt;set &lt;/span&gt;undofile
&lt;span class=&quot;nb&quot;&gt;set &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;undodir&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;~/.vim/undodir&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;And now even if you go on an editing rampage, vim will save the day. The next time, I shall introduce you
to vim’s other superpower - the ability to use the multi-verse.&lt;/p&gt;

    &lt;p&gt;&lt;a href=&quot;//srijanshetty.in/technical/time-travelling-with-vim/&quot;&gt;Time Travelling With Vim&lt;/a&gt; was originally published by Srijan R. Shetty at &lt;a href=&quot;//srijanshetty.in&quot;&gt;Srijan R. Shetty&lt;/a&gt; on May 30, 2015.&lt;/p&gt;
  </content>
</entry>


  

<entry>
  <title type="html"><![CDATA[Officially an Alumni of IIT Kanpur]]></title>
  <link rel="alternate" type="text/html" href="//srijanshetty.in/write-ups/officially-an-alumni-of-iit-kanpur/" />
  <id>//srijanshetty.in/write-ups/officially-an-alumni-of-iit-kanpur</id>
  <updated>Sat May 30 09:54:14 IST 2015T00:00:00-00:00</updated>
  <published>2015-05-30T09:51:19+05:30</published>
  
  <author>
    <name>Srijan R. Shetty</name>
    <uri>//srijanshetty.in</uri>
    <email>srijan.shetty+code@gmail.com</email>
  </author>
  <content type="html">
    &lt;blockquote&gt;
  &lt;p&gt;Alumni Contact Program, IIT Kanpur asked me to write this post which was featured
on their facebook page on May 27, 2015.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;#Kanpur16 #3&lt;br /&gt;&lt;br /&gt;
Newest Alumni/Alumnae Of IIT Kanpur&lt;br /&gt;&lt;br /&gt;
&lt;strong&gt;Srijan R Shetty (IITK/B.Tech./CSE/2015)&lt;/strong&gt;&lt;br /&gt;&lt;br /&gt;
IITK, a microcosm, a melody made of the discordant notes that the fleeting faces of the institute are. And in this cacophony, I found the greatest of treasures - true friendships: seniors, who’ve pushed me out of my comfort zone, and at the helm of life; juniors, who’ve always inspired me to be a better person; and a bunch of crazy whacks who’ve made me realize that life is about the experiences and the people you choose to share them with. Now that I look back, the last four years seem to have lasted a lifetime and if it hadn’t been for these pyscho-whacks - fondly, my wing - who’ve stood by me for no apparent reason, it would have been a very humdrum affair.&lt;br /&gt;&lt;br /&gt;
Perhaps, the most important thing that this institute has taught me is to keep my mind open and to never stop learning.
You meet people from different walks of life, you are faced with different ideologies, ideas traditions and the only way you can appreciate them is with an open mind. Keeping an open mind has also made for some great stories, one in particular relates to getting convinced by a friend to mass bunk a class. Amusingly, in the next class of the same course, the professor maintained a calm demeanour and wasn’t furious at all. We were in for a surprise though, as he soon announced - ‘We completed four chapters in the previous class and the quiz copies for the quiz conducted in the last class has been checked, students are
requested to collect the answer sheets from my office; and the quiz amounts to 25% the course weight.’ The dumbstruck faces all over the class were priceless.&lt;br /&gt;&lt;br /&gt;
&lt;em&gt;One last piece of advice, abhor the concept POR (Position Of Responsibility). At the end, you either learn something out of it or there are already enough people with the same POR for it to be of any consequence.&lt;/em&gt;&lt;br /&gt;&lt;br /&gt;
We wish All The Best to Srijan for his future endeavours !!&lt;/p&gt;

&lt;figure&gt;
	&lt;a href=&quot;/images/acp-27-05-2015.jpg&quot;&gt;&lt;img src=&quot;/images/acp-27-05-2015.jpg&quot; /&gt;&lt;/a&gt;
&lt;/figure&gt;

    &lt;p&gt;&lt;a href=&quot;//srijanshetty.in/write-ups/officially-an-alumni-of-iit-kanpur/&quot;&gt;Officially an Alumni of IIT Kanpur&lt;/a&gt; was originally published by Srijan R. Shetty at &lt;a href=&quot;//srijanshetty.in&quot;&gt;Srijan R. Shetty&lt;/a&gt; on May 30, 2015.&lt;/p&gt;
  </content>
</entry>


  

<entry>
  <title type="html"><![CDATA[Safely Storing GPG Keys]]></title>
  <link rel="alternate" type="text/html" href="//srijanshetty.in/technical/safely-storing-gpg-keys/" />
  <id>//srijanshetty.in/technical/safely-storing-gpg-keys</id>
  <updated>Sat May 23 17:24:35 IST 2015T00:00:00-00:00</updated>
  <published>2015-05-23T16:59:33+05:30</published>
  
  <author>
    <name>Srijan R. Shetty</name>
    <uri>//srijanshetty.in</uri>
    <email>srijan.shetty+code@gmail.com</email>
  </author>
  <content type="html">
    &lt;blockquote&gt;
  &lt;p&gt;TL;DR: The next few paragraphs are mindless rants on the chicken-egg safety problem,
any sane person - you I presume - is better off not reading them and directly going to
&lt;a href=&quot;#encryption&quot;&gt;here&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I’m very paranoid when it comes to managing private information like GPG Keys, SSH Keys, and
other sensitive information. (What I call private information is essentially arbitrary, I tend to
use the thumb rule that any kind of key, its meta-data and other information that I wouldn’t want
people reading is private). At the same time, I’m also paranoid of my beloved computer crashing on
me - I know, the thought itself is terrifying but a harsh reality that we need to face. A very nice
quote which is vaguely relevant to this topic by Leslie Lamport:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;You know you have a distributed system when the crash of a computer you’ve never
heard of stops you from getting any work done.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;After a lot of soul searching – on Google lasting for 10 minutes, I found
&lt;strong&gt;&lt;a href=&quot;https://github.com/StackExchange/blackbox&quot;&gt;blackbox&lt;/a&gt;&lt;/strong&gt;, a set of git hooks used by the holy
monks of StackExchange to encrypt all data using GPG Keys before adding it version control.
I suddenly felt complete, I was in bliss; I created a git repo, loaded it with all the
private information I wanted and pushed it to git (a private git hosting service and not
GitHub, just for an extra bit of security). I thought that I was done for life, and then
it suddenly struck me, the problem of encryption is essentially a chicken-egg problem. I
still needed a way to secure my GPG Keys and make copies.&lt;br /&gt;&lt;br /&gt;
Detested, I went in for another round of soul searching and now I just AES256 encrypt my GPG Keys,
Base64 encode it (to make them look all nice and clean) and store them in LastPass. (Still stuck in
the chicken-egg problem). The steps have bee illustrated below for the curious.&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;encryption&quot;&gt;Encryption&lt;/h2&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;c&quot;&gt;# copy all the relevant information&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;cp ~/.gnupg/pubring.gpg gpgkeys/
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;cp ~/.gnupg/secring.gpg gpgkeys/
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;cp ~/.gnupg/trustdb.gpg gpgkeys/

&lt;span class=&quot;c&quot;&gt;# or, instead of backing up trustdb ..&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;gpg --export-ownertrust &amp;gt; gpgkeys/srijanshetty-ownertrust-gpg.txt

&lt;span class=&quot;c&quot;&gt;# tar the folder&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;tar cvzf gpgkeys.tar.gz gpgkeys

&lt;span class=&quot;c&quot;&gt;# encrypt and base64 encode&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;openssl aes-256-cbc -in gpgkeys.tar.gz -out gpgkeys.tar.gz.enc -a&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id=&quot;decryption&quot;&gt;Decryption&lt;/h2&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;c&quot;&gt;# decypt and base64 decode&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;openssl aes-256-cbc -d -in gpgkeys.tar.gz.enc -out gpgkeys.tar.gz -a

&lt;span class=&quot;c&quot;&gt;# untar&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;tar xvzf gpgkeys.tar.gz.enc

&lt;span class=&quot;c&quot;&gt;# copy back to gnupg folder&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;cp gpgkeys/*.gpg ~/.gnupg/

&lt;span class=&quot;c&quot;&gt;# or, if you exported the ownertrust&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;gpg --import-ownertrust srijanshetty-ownertrust-gpg.txt&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


    &lt;p&gt;&lt;a href=&quot;//srijanshetty.in/technical/safely-storing-gpg-keys/&quot;&gt;Safely Storing GPG Keys&lt;/a&gt; was originally published by Srijan R. Shetty at &lt;a href=&quot;//srijanshetty.in&quot;&gt;Srijan R. Shetty&lt;/a&gt; on May 23, 2015.&lt;/p&gt;
  </content>
</entry>

</feed>
